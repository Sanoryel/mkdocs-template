
image:
  name: registry.gitlab.com/lucasleyronas/mkdocs_docker:main

stages:
  - test
  - build
  - pdf
  - deploy

before_script:
  - git config user.email $PROJECT_BOT_USER@gitlab.example.com
  - git config user.name $PROJECT_BOT_USER
  - git fetch origin $PAGES_BRANCH && git checkout -b $PAGES_BRANCH origin/$PAGES_BRANCH || echo "Pages branch not deployed yet."
  - git checkout $CI_COMMIT_SHA

# Étape 1 : Test en mode strict
test-mkdocs-strict:
  stage: test
  script:
    - mkdocs build --strict --verbose --site-dir test
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH'

# Étape 2 : Build en mode strict
build-mkdocs:
  stage: build
  script:
    - update_site_url.py  # Exécuter le script Python
    - update_repo_url.py  # Exécuter le script Python
    - mkdocs build --strict  # Build le site avec vérification stricte 
  artifacts:
    paths:
      - site/
      - mkdocs.yml
    expire_in: 1 hour
  only:
    - tags  # Ce job ne s'exécute que sur les tags

# Étape 3 : Génération de PDF avec un script
generate-pdf:
  stage: pdf
  script:
    - mkdocs serve -a 0.0.0.0:8000 & export MKDOCS_PID=$!
    # Attente active jusqu'à ce que le serveur soit accessible
    - until nc -z 127.0.0.1 8000; do echo "Waiting for server..."; sleep 1; done
    - export_to_pdf.js http://127.0.0.1:8000/print_page/ site.pdf "Documentation"
    - kill $MKDOCS_PID
  dependencies:
    - build-mkdocs
  artifacts:
    paths:
      - site.pdf
    expire_in: 1 hour
  only:
    - tags  # Ce job ne s'exécute que sur les tags

pages:
  stage: deploy
  variables:
    PAGES_BRANCH: pages
    HTTPS_REMOTE: https://${PROJECT_BOT_USER}:${PROJECT_BOT_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
  before_script:
    - git config user.email $PROJECT_BOT_USER@gitlab.example.com
    - git config user.name $PROJECT_BOT_USER
    - git fetch origin $PAGES_BRANCH && git checkout -b $PAGES_BRANCH origin/$PAGES_BRANCH || echo "Pages branch not deployed yet."
    - git checkout $CI_COMMIT_SHA
  script:
    - mv site public
    - move_pdf_file.py "mkdocs.yml" "public"

    # Déploiement avec Mike
    - mike deploy --deploy-prefix public -r $HTTPS_REMOTE -p -b $PAGES_BRANCH $CI_COMMIT_TAG
    - mike set-default --deploy-prefix public -r $HTTPS_REMOTE -p -b $PAGES_BRANCH $CI_COMMIT_TAG
    - git checkout $PAGES_BRANCH -- public/

  only:
    - tags  # Ce job ne s'exécute que sur les tags
  dependencies:
    - generate-pdf
    - build-mkdocs
  artifacts:
    paths:
      - public
